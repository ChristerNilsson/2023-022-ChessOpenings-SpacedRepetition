// Generated by CoffeeScript 2.5.1
var SIZE, released, xdraw;

import _ from 'https://cdn.skypack.dev/lodash';

import {
  ass,
  log,
  range
} from '../js/utils.js';

import {
  Board
} from '../js/board.js';

import {
  Button
} from '../js/button.js';

import {
  clickString,
  global,
  loadTree
} from '../js/globals.js';

import {
  SpacedRepetition
} from '../js/spaced_repetition.js';

import {
  getPath,
  testTree
} from '../js/tree.js';

SIZE = global.SIZE;

released = true; // prevention of touch bounce

window.preload = () => {
  var i, j, len, len1, letter, ref, ref1, results;
  global.arr = loadJSON('./data/arr-2014-08.json'); // SIZE = 0
  ref = "rnbqkp";
  //global.arr = loadJSON './data/arr-2016-02.json' # SIZE = 1
  //global.arr = loadJSON './data/arr-2019-06.json' # SIZE = 2
  for (i = 0, len = ref.length; i < len; i++) {
    letter = ref[i];
    global.pics[letter] = loadImage('./images/b' + letter + '.png');
  }
  ref1 = "RNBQKP";
  results = [];
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    letter = ref1[j];
    results.push(global.pics[letter] = loadImage('./images/w' + letter.toLowerCase() + '.png'));
  }
  return results;
};

window.setup = () => {
  createCanvas(SIZE * 10.3, SIZE * 11);
  textAlign(CENTER, CENTER);
  rectMode(CENTER);
  global.board = new Board();
  global.chess = new Chess();
  global.arr = global.arr.arr;
  testTree();
  console.log(global.arr.length);
  //	loadTree 0
  return xdraw();
};

xdraw = () => {
  var button, i, len, ref, results;
  background('gray');
  textSize(SIZE);
  global.board.draw();
  ref = global.buttons;
  results = [];
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    results.push(button.draw());
  }
  return results;
};

// window.keyPressed = =>
// 	if key == 'ArrowLeft' then clickString 'left'
// 	if key == 'ArrowRight'  then clickString 'right'
// 	if key == 'ArrowUp'  then clickString 'up'
// 	if key == 'ArrowDown' then clickString 'down'
// 	if key == ' ' then clickString 'flip'
// 	if key == 'Home' then clickString 'first'
// 	xdraw()
// 	return false
window.mousePressed = () => {
  var button, i, j, len, len1, ref, ref1, square;
  if (!released) {
    return;
  }
  released = false;
  ref = global.buttons.concat(global.board.buttons);
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    if (button.inside(mouseX, mouseY)) {
      button.onclick();
      xdraw();
      return false;
    }
  }
  ref1 = global.board.squares;
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    square = ref1[j];
    if (square.inside(mouseX, mouseY)) {
      square.onclick();
      xdraw();
      return false;
    }
  }
  return false;
};

window.mouseReleased = () => {
  released = true;
  return false;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLFFBQUEsRUFBQTs7QUFBQSxPQUFPLENBQVAsTUFBQTs7QUFDQSxPQUFBO0VBQVEsR0FBUjtFQUFZLEdBQVo7RUFBZ0IsS0FBaEI7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUSxLQUFSO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVEsTUFBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLFdBQVI7RUFBb0IsTUFBcEI7RUFBMkIsUUFBM0I7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUSxnQkFBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLE9BQVI7RUFBZ0IsUUFBaEI7Q0FBQSxNQUFBOztBQUVBLElBQUEsR0FBTyxNQUFNLENBQUM7O0FBQ2QsUUFBQSxHQUFXLEtBVFg7O0FBV0EsTUFBTSxDQUFDLE9BQVAsR0FBaUIsQ0FBQSxDQUFBLEdBQUE7QUFDakIsTUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsTUFBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUE7RUFBQyxNQUFNLENBQUMsR0FBUCxHQUFhLFFBQUEsQ0FBUyx5QkFBVCxFQUFkO0FBR0M7OztFQUFBLEtBQUEscUNBQUE7O0lBQ0MsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFELENBQVgsR0FBc0IsU0FBQSxDQUFVLFlBQUEsR0FBZSxNQUFmLEdBQXdCLE1BQWxDO0VBRHZCO0FBRUE7QUFBQTtFQUFBLEtBQUEsd0NBQUE7O2lCQUNDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBRCxDQUFYLEdBQXNCLFNBQUEsQ0FBVSxZQUFBLEdBQWUsTUFBTSxDQUFDLFdBQVAsQ0FBQSxDQUFmLEdBQXNDLE1BQWhEO0VBRHZCLENBQUE7O0FBTmdCOztBQVNqQixNQUFNLENBQUMsS0FBUCxHQUFlLENBQUEsQ0FBQSxHQUFBO0VBQ2QsWUFBQSxDQUFhLElBQUEsR0FBSyxJQUFsQixFQUF3QixJQUFBLEdBQUssRUFBN0I7RUFDQSxTQUFBLENBQVUsTUFBVixFQUFpQixNQUFqQjtFQUNBLFFBQUEsQ0FBUyxNQUFUO0VBQ0EsTUFBTSxDQUFDLEtBQVAsR0FBZSxJQUFJLEtBQUosQ0FBQTtFQUNmLE1BQU0sQ0FBQyxLQUFQLEdBQWUsSUFBSSxLQUFKLENBQUE7RUFDZixNQUFNLENBQUMsR0FBUCxHQUFhLE1BQU0sQ0FBQyxHQUFHLENBQUM7RUFDeEIsUUFBQSxDQUFBO0VBQ0EsT0FBTyxDQUFDLEdBQVIsQ0FBWSxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQXZCLEVBUEQ7O1NBU0MsS0FBQSxDQUFBO0FBVmM7O0FBWWYsS0FBQSxHQUFRLENBQUEsQ0FBQSxHQUFBO0FBQ1IsTUFBQSxNQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUE7RUFBQyxVQUFBLENBQVcsTUFBWDtFQUNBLFFBQUEsQ0FBUyxJQUFUO0VBQ0EsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFiLENBQUE7QUFDQTtBQUFBO0VBQUEsS0FBQSxxQ0FBQTs7aUJBQ0MsTUFBTSxDQUFDLElBQVAsQ0FBQTtFQURELENBQUE7O0FBSk8sRUFoQ1I7Ozs7Ozs7Ozs7O0FBaURBLE1BQU0sQ0FBQyxZQUFQLEdBQXNCLENBQUEsQ0FBQSxHQUFBO0FBQ3RCLE1BQUEsTUFBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBO0VBQUMsSUFBRyxDQUFJLFFBQVA7QUFBcUIsV0FBckI7O0VBQ0EsUUFBQSxHQUFVO0FBQ1Y7RUFBQSxLQUFBLHFDQUFBOztJQUNDLElBQUcsTUFBTSxDQUFDLE1BQVAsQ0FBYyxNQUFkLEVBQXFCLE1BQXJCLENBQUg7TUFDQyxNQUFNLENBQUMsT0FBUCxDQUFBO01BQ0EsS0FBQSxDQUFBO0FBQ0EsYUFBTyxNQUhSOztFQUREO0FBS0E7RUFBQSxLQUFBLHdDQUFBOztJQUNDLElBQUcsTUFBTSxDQUFDLE1BQVAsQ0FBYyxNQUFkLEVBQXFCLE1BQXJCLENBQUg7TUFDQyxNQUFNLENBQUMsT0FBUCxDQUFBO01BQ0EsS0FBQSxDQUFBO0FBQ0EsYUFBTyxNQUhSOztFQUREO1NBS0E7QUFicUI7O0FBZXRCLE1BQU0sQ0FBQyxhQUFQLEdBQXVCLENBQUEsQ0FBQSxHQUFBO0VBQ3RCLFFBQUEsR0FBVztTQUNYO0FBRnNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSAnaHR0cHM6Ly9jZG4uc2t5cGFjay5kZXYvbG9kYXNoJ1xyXG5pbXBvcnQge2Fzcyxsb2cscmFuZ2V9IGZyb20gJy4uL2pzL3V0aWxzLmpzJ1xyXG5pbXBvcnQge0JvYXJkfSBmcm9tICcuLi9qcy9ib2FyZC5qcydcclxuaW1wb3J0IHtCdXR0b259IGZyb20gJy4uL2pzL2J1dHRvbi5qcydcclxuaW1wb3J0IHtjbGlja1N0cmluZyxnbG9iYWwsbG9hZFRyZWV9IGZyb20gJy4uL2pzL2dsb2JhbHMuanMnXHJcbmltcG9ydCB7U3BhY2VkUmVwZXRpdGlvbn0gZnJvbSAnLi4vanMvc3BhY2VkX3JlcGV0aXRpb24uanMnXHJcbmltcG9ydCB7Z2V0UGF0aCx0ZXN0VHJlZX0gZnJvbSAnLi4vanMvdHJlZS5qcydcclxuXHJcblNJWkUgPSBnbG9iYWwuU0laRVxyXG5yZWxlYXNlZCA9IHRydWUgIyBwcmV2ZW50aW9uIG9mIHRvdWNoIGJvdW5jZVxyXG5cclxud2luZG93LnByZWxvYWQgPSA9PlxyXG5cdGdsb2JhbC5hcnIgPSBsb2FkSlNPTiAnLi9kYXRhL2Fyci0yMDE0LTA4Lmpzb24nICMgU0laRSA9IDBcclxuXHQjZ2xvYmFsLmFyciA9IGxvYWRKU09OICcuL2RhdGEvYXJyLTIwMTYtMDIuanNvbicgIyBTSVpFID0gMVxyXG5cdCNnbG9iYWwuYXJyID0gbG9hZEpTT04gJy4vZGF0YS9hcnItMjAxOS0wNi5qc29uJyAjIFNJWkUgPSAyXHJcblx0Zm9yIGxldHRlciBpbiBcInJuYnFrcFwiXHJcblx0XHRnbG9iYWwucGljc1tsZXR0ZXJdID0gbG9hZEltYWdlICcuL2ltYWdlcy9iJyArIGxldHRlciArICcucG5nJ1xyXG5cdGZvciBsZXR0ZXIgaW4gXCJSTkJRS1BcIlxyXG5cdFx0Z2xvYmFsLnBpY3NbbGV0dGVyXSA9IGxvYWRJbWFnZSAnLi9pbWFnZXMvdycgKyBsZXR0ZXIudG9Mb3dlckNhc2UoKSArICcucG5nJ1xyXG5cclxud2luZG93LnNldHVwID0gPT5cclxuXHRjcmVhdGVDYW52YXMgU0laRSoxMC4zLCBTSVpFKjExXHJcblx0dGV4dEFsaWduIENFTlRFUixDRU5URVJcclxuXHRyZWN0TW9kZSBDRU5URVJcclxuXHRnbG9iYWwuYm9hcmQgPSBuZXcgQm9hcmQoKVxyXG5cdGdsb2JhbC5jaGVzcyA9IG5ldyBDaGVzcygpXHJcblx0Z2xvYmFsLmFyciA9IGdsb2JhbC5hcnIuYXJyXHJcblx0dGVzdFRyZWUoKVxyXG5cdGNvbnNvbGUubG9nIGdsb2JhbC5hcnIubGVuZ3RoXHJcbiNcdGxvYWRUcmVlIDBcclxuXHR4ZHJhdygpXHJcblxyXG54ZHJhdyA9ID0+XHJcblx0YmFja2dyb3VuZCAnZ3JheSdcclxuXHR0ZXh0U2l6ZSBTSVpFXHJcblx0Z2xvYmFsLmJvYXJkLmRyYXcoKVxyXG5cdGZvciBidXR0b24gaW4gZ2xvYmFsLmJ1dHRvbnNcclxuXHRcdGJ1dHRvbi5kcmF3KClcclxuXHJcbiMgd2luZG93LmtleVByZXNzZWQgPSA9PlxyXG4jIFx0aWYga2V5ID09ICdBcnJvd0xlZnQnIHRoZW4gY2xpY2tTdHJpbmcgJ2xlZnQnXHJcbiMgXHRpZiBrZXkgPT0gJ0Fycm93UmlnaHQnICB0aGVuIGNsaWNrU3RyaW5nICdyaWdodCdcclxuIyBcdGlmIGtleSA9PSAnQXJyb3dVcCcgIHRoZW4gY2xpY2tTdHJpbmcgJ3VwJ1xyXG4jIFx0aWYga2V5ID09ICdBcnJvd0Rvd24nIHRoZW4gY2xpY2tTdHJpbmcgJ2Rvd24nXHJcbiMgXHRpZiBrZXkgPT0gJyAnIHRoZW4gY2xpY2tTdHJpbmcgJ2ZsaXAnXHJcbiMgXHRpZiBrZXkgPT0gJ0hvbWUnIHRoZW4gY2xpY2tTdHJpbmcgJ2ZpcnN0J1xyXG4jIFx0eGRyYXcoKVxyXG4jIFx0cmV0dXJuIGZhbHNlXHJcblxyXG53aW5kb3cubW91c2VQcmVzc2VkID0gPT5cclxuXHRpZiBub3QgcmVsZWFzZWQgdGhlbiByZXR1cm5cclxuXHRyZWxlYXNlZCA9ZmFsc2VcclxuXHRmb3IgYnV0dG9uIGluIGdsb2JhbC5idXR0b25zLmNvbmNhdCBnbG9iYWwuYm9hcmQuYnV0dG9uc1xyXG5cdFx0aWYgYnV0dG9uLmluc2lkZSBtb3VzZVgsbW91c2VZXHJcblx0XHRcdGJ1dHRvbi5vbmNsaWNrKClcclxuXHRcdFx0eGRyYXcoKVxyXG5cdFx0XHRyZXR1cm4gZmFsc2VcclxuXHRmb3Igc3F1YXJlIGluIGdsb2JhbC5ib2FyZC5zcXVhcmVzXHJcblx0XHRpZiBzcXVhcmUuaW5zaWRlIG1vdXNlWCxtb3VzZVlcclxuXHRcdFx0c3F1YXJlLm9uY2xpY2soKVxyXG5cdFx0XHR4ZHJhdygpXHJcblx0XHRcdHJldHVybiBmYWxzZVxyXG5cdGZhbHNlXHJcblxyXG53aW5kb3cubW91c2VSZWxlYXNlZCA9ID0+XHJcblx0cmVsZWFzZWQgPSB0cnVlXHJcblx0ZmFsc2UiXX0=
//# sourceURL=c:\github\2023-022-ChessOpenings-SpacedRepetition\coffee\sketch.coffee