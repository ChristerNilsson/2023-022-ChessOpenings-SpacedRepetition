// Generated by CoffeeScript 2.5.1
var SIZE, released, xdraw;

import _ from 'https://cdn.skypack.dev/lodash';

import {
  ass,
  log,
  range
} from '../js/utils.js';

import {
  Board
} from '../js/board.js';

import {
  Button
} from '../js/button.js';

import {
  clickString,
  global,
  loadTree
} from '../js/globals.js';

SIZE = global.SIZE;

released = true; // prevention of touch bounce

window.preload = () => {
  var i, j, len, len1, letter, ref, ref1, results;
  global.database = loadJSON('./data/database.json');
  global.tree = loadJSON('./data/tree.json');
  console.log(global.tree);
  ref = "rnbqkp";
  for (i = 0, len = ref.length; i < len; i++) {
    letter = ref[i];
    global.pics[letter] = loadImage('./images/b' + letter + '.png');
  }
  ref1 = "RNBQKP";
  results = [];
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    letter = ref1[j];
    results.push(global.pics[letter] = loadImage('./images/w' + letter.toLowerCase() + '.png'));
  }
  return results;
};

window.setup = () => {
  createCanvas(SIZE * 10.3, SIZE * 11);
  textAlign(CENTER, CENTER);
  rectMode(CENTER);
  global.board = new Board();
  global.chess = new Chess();
  console.log(global.tree);
  loadTree(0);
  return xdraw();
};

xdraw = () => {
  var button, i, len, ref, results;
  background('gray');
  textSize(SIZE);
  global.board.draw();
  ref = global.buttons;
  results = [];
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    results.push(button.draw());
  }
  return results;
};

window.keyPressed = () => {
  if (key === 'ArrowLeft') {
    clickString('left');
  }
  if (key === 'ArrowRight') {
    clickString('right');
  }
  if (key === 'ArrowUp') {
    clickString('up');
  }
  if (key === 'ArrowDown') {
    clickString('down');
  }
  if (key === ' ') {
    clickString('flip');
  }
  if (key === 'Home') {
    clickString('first');
  }
  xdraw();
  return false;
};

window.mousePressed = () => {
  var button, i, j, len, len1, ref, ref1, square;
  if (!released) {
    return;
  }
  released = false;
  ref = global.buttons.concat(global.board.buttons);
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    if (button.inside(mouseX, mouseY)) {
      button.onclick();
      xdraw();
      return false;
    }
  }
  ref1 = global.board.squares;
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    square = ref1[j];
    if (square.inside(mouseX, mouseY)) {
      square.onclick();
      xdraw();
      return false;
    }
  }
  return false;
};

window.mouseReleased = () => {
  released = true;
  return false;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLFFBQUEsRUFBQTs7QUFBQSxPQUFPLENBQVAsTUFBQTs7QUFDQSxPQUFBO0VBQVEsR0FBUjtFQUFZLEdBQVo7RUFBZ0IsS0FBaEI7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUSxLQUFSO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVEsTUFBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLFdBQVI7RUFBb0IsTUFBcEI7RUFBMkIsUUFBM0I7Q0FBQSxNQUFBOztBQUVBLElBQUEsR0FBTyxNQUFNLENBQUM7O0FBQ2QsUUFBQSxHQUFXLEtBUFg7O0FBU0EsTUFBTSxDQUFDLE9BQVAsR0FBaUIsQ0FBQSxDQUFBLEdBQUE7QUFDakIsTUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsTUFBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUE7RUFBQyxNQUFNLENBQUMsUUFBUCxHQUFrQixRQUFBLENBQVMsc0JBQVQ7RUFDbEIsTUFBTSxDQUFDLElBQVAsR0FBYyxRQUFBLENBQVMsa0JBQVQ7RUFDZCxPQUFPLENBQUMsR0FBUixDQUFZLE1BQU0sQ0FBQyxJQUFuQjtBQUNBO0VBQUEsS0FBQSxxQ0FBQTs7SUFDQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQUQsQ0FBWCxHQUFzQixTQUFBLENBQVUsWUFBQSxHQUFlLE1BQWYsR0FBd0IsTUFBbEM7RUFEdkI7QUFFQTtBQUFBO0VBQUEsS0FBQSx3Q0FBQTs7aUJBQ0MsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFELENBQVgsR0FBc0IsU0FBQSxDQUFVLFlBQUEsR0FBZSxNQUFNLENBQUMsV0FBUCxDQUFBLENBQWYsR0FBc0MsTUFBaEQ7RUFEdkIsQ0FBQTs7QUFOZ0I7O0FBU2pCLE1BQU0sQ0FBQyxLQUFQLEdBQWUsQ0FBQSxDQUFBLEdBQUE7RUFDZCxZQUFBLENBQWEsSUFBQSxHQUFLLElBQWxCLEVBQXdCLElBQUEsR0FBSyxFQUE3QjtFQUNBLFNBQUEsQ0FBVSxNQUFWLEVBQWlCLE1BQWpCO0VBQ0EsUUFBQSxDQUFTLE1BQVQ7RUFDQSxNQUFNLENBQUMsS0FBUCxHQUFlLElBQUksS0FBSixDQUFBO0VBQ2YsTUFBTSxDQUFDLEtBQVAsR0FBZSxJQUFJLEtBQUosQ0FBQTtFQUNmLE9BQU8sQ0FBQyxHQUFSLENBQVksTUFBTSxDQUFDLElBQW5CO0VBQ0EsUUFBQSxDQUFTLENBQVQ7U0FDQSxLQUFBLENBQUE7QUFSYzs7QUFVZixLQUFBLEdBQVEsQ0FBQSxDQUFBLEdBQUE7QUFDUixNQUFBLE1BQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLEdBQUEsRUFBQTtFQUFDLFVBQUEsQ0FBVyxNQUFYO0VBQ0EsUUFBQSxDQUFTLElBQVQ7RUFDQSxNQUFNLENBQUMsS0FBSyxDQUFDLElBQWIsQ0FBQTtBQUNBO0FBQUE7RUFBQSxLQUFBLHFDQUFBOztpQkFDQyxNQUFNLENBQUMsSUFBUCxDQUFBO0VBREQsQ0FBQTs7QUFKTzs7QUFPUixNQUFNLENBQUMsVUFBUCxHQUFvQixDQUFBLENBQUEsR0FBQTtFQUNuQixJQUFHLEdBQUEsS0FBTyxXQUFWO0lBQTJCLFdBQUEsQ0FBWSxNQUFaLEVBQTNCOztFQUNBLElBQUcsR0FBQSxLQUFPLFlBQVY7SUFBNkIsV0FBQSxDQUFZLE9BQVosRUFBN0I7O0VBQ0EsSUFBRyxHQUFBLEtBQU8sU0FBVjtJQUEwQixXQUFBLENBQVksSUFBWixFQUExQjs7RUFDQSxJQUFHLEdBQUEsS0FBTyxXQUFWO0lBQTJCLFdBQUEsQ0FBWSxNQUFaLEVBQTNCOztFQUNBLElBQUcsR0FBQSxLQUFPLEdBQVY7SUFBbUIsV0FBQSxDQUFZLE1BQVosRUFBbkI7O0VBQ0EsSUFBRyxHQUFBLEtBQU8sTUFBVjtJQUFzQixXQUFBLENBQVksT0FBWixFQUF0Qjs7RUFDQSxLQUFBLENBQUE7QUFDQSxTQUFPO0FBUlk7O0FBVXBCLE1BQU0sQ0FBQyxZQUFQLEdBQXNCLENBQUEsQ0FBQSxHQUFBO0FBQ3RCLE1BQUEsTUFBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBO0VBQUMsSUFBRyxDQUFJLFFBQVA7QUFBcUIsV0FBckI7O0VBQ0EsUUFBQSxHQUFVO0FBQ1Y7RUFBQSxLQUFBLHFDQUFBOztJQUNDLElBQUcsTUFBTSxDQUFDLE1BQVAsQ0FBYyxNQUFkLEVBQXFCLE1BQXJCLENBQUg7TUFDQyxNQUFNLENBQUMsT0FBUCxDQUFBO01BQ0EsS0FBQSxDQUFBO0FBQ0EsYUFBTyxNQUhSOztFQUREO0FBTUE7RUFBQSxLQUFBLHdDQUFBOztJQUNDLElBQUcsTUFBTSxDQUFDLE1BQVAsQ0FBYyxNQUFkLEVBQXFCLE1BQXJCLENBQUg7TUFDQyxNQUFNLENBQUMsT0FBUCxDQUFBO01BQ0EsS0FBQSxDQUFBO0FBQ0EsYUFBTyxNQUhSOztFQUREO1NBTUE7QUFmcUI7O0FBaUJ0QixNQUFNLENBQUMsYUFBUCxHQUF1QixDQUFBLENBQUEsR0FBQTtFQUN0QixRQUFBLEdBQVc7U0FDWDtBQUZzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2h0dHBzOi8vY2RuLnNreXBhY2suZGV2L2xvZGFzaCdcclxuaW1wb3J0IHthc3MsbG9nLHJhbmdlfSBmcm9tICcuLi9qcy91dGlscy5qcydcclxuaW1wb3J0IHtCb2FyZH0gZnJvbSAnLi4vanMvYm9hcmQuanMnXHJcbmltcG9ydCB7QnV0dG9ufSBmcm9tICcuLi9qcy9idXR0b24uanMnXHJcbmltcG9ydCB7Y2xpY2tTdHJpbmcsZ2xvYmFsLGxvYWRUcmVlfSBmcm9tICcuLi9qcy9nbG9iYWxzLmpzJ1xyXG5cclxuU0laRSA9IGdsb2JhbC5TSVpFXHJcbnJlbGVhc2VkID0gdHJ1ZSAjIHByZXZlbnRpb24gb2YgdG91Y2ggYm91bmNlXHJcblxyXG53aW5kb3cucHJlbG9hZCA9ID0+XHJcblx0Z2xvYmFsLmRhdGFiYXNlID0gbG9hZEpTT04gJy4vZGF0YS9kYXRhYmFzZS5qc29uJ1xyXG5cdGdsb2JhbC50cmVlID0gbG9hZEpTT04gJy4vZGF0YS90cmVlLmpzb24nXHJcblx0Y29uc29sZS5sb2cgZ2xvYmFsLnRyZWVcclxuXHRmb3IgbGV0dGVyIGluIFwicm5icWtwXCJcclxuXHRcdGdsb2JhbC5waWNzW2xldHRlcl0gPSBsb2FkSW1hZ2UgJy4vaW1hZ2VzL2InICsgbGV0dGVyICsgJy5wbmcnXHJcblx0Zm9yIGxldHRlciBpbiBcIlJOQlFLUFwiXHJcblx0XHRnbG9iYWwucGljc1tsZXR0ZXJdID0gbG9hZEltYWdlICcuL2ltYWdlcy93JyArIGxldHRlci50b0xvd2VyQ2FzZSgpICsgJy5wbmcnXHJcblxyXG53aW5kb3cuc2V0dXAgPSA9PlxyXG5cdGNyZWF0ZUNhbnZhcyBTSVpFKjEwLjMsIFNJWkUqMTFcclxuXHR0ZXh0QWxpZ24gQ0VOVEVSLENFTlRFUlxyXG5cdHJlY3RNb2RlIENFTlRFUlxyXG5cdGdsb2JhbC5ib2FyZCA9IG5ldyBCb2FyZCgpXHJcblx0Z2xvYmFsLmNoZXNzID0gbmV3IENoZXNzKClcclxuXHRjb25zb2xlLmxvZyBnbG9iYWwudHJlZVxyXG5cdGxvYWRUcmVlIDBcclxuXHR4ZHJhdygpXHJcblxyXG54ZHJhdyA9ID0+XHJcblx0YmFja2dyb3VuZCAnZ3JheSdcclxuXHR0ZXh0U2l6ZSBTSVpFXHJcblx0Z2xvYmFsLmJvYXJkLmRyYXcoKVxyXG5cdGZvciBidXR0b24gaW4gZ2xvYmFsLmJ1dHRvbnNcclxuXHRcdGJ1dHRvbi5kcmF3KClcclxuXHJcbndpbmRvdy5rZXlQcmVzc2VkID0gPT5cclxuXHRpZiBrZXkgPT0gJ0Fycm93TGVmdCcgdGhlbiBjbGlja1N0cmluZyAnbGVmdCdcclxuXHRpZiBrZXkgPT0gJ0Fycm93UmlnaHQnICB0aGVuIGNsaWNrU3RyaW5nICdyaWdodCdcclxuXHRpZiBrZXkgPT0gJ0Fycm93VXAnICB0aGVuIGNsaWNrU3RyaW5nICd1cCdcclxuXHRpZiBrZXkgPT0gJ0Fycm93RG93bicgdGhlbiBjbGlja1N0cmluZyAnZG93bidcclxuXHRpZiBrZXkgPT0gJyAnIHRoZW4gY2xpY2tTdHJpbmcgJ2ZsaXAnXHJcblx0aWYga2V5ID09ICdIb21lJyB0aGVuIGNsaWNrU3RyaW5nICdmaXJzdCdcclxuXHR4ZHJhdygpXHJcblx0cmV0dXJuIGZhbHNlXHJcblxyXG53aW5kb3cubW91c2VQcmVzc2VkID0gPT5cclxuXHRpZiBub3QgcmVsZWFzZWQgdGhlbiByZXR1cm5cclxuXHRyZWxlYXNlZCA9ZmFsc2VcclxuXHRmb3IgYnV0dG9uIGluIGdsb2JhbC5idXR0b25zLmNvbmNhdCBnbG9iYWwuYm9hcmQuYnV0dG9uc1xyXG5cdFx0aWYgYnV0dG9uLmluc2lkZSBtb3VzZVgsbW91c2VZXHJcblx0XHRcdGJ1dHRvbi5vbmNsaWNrKClcclxuXHRcdFx0eGRyYXcoKVxyXG5cdFx0XHRyZXR1cm4gZmFsc2VcclxuXHJcblx0Zm9yIHNxdWFyZSBpbiBnbG9iYWwuYm9hcmQuc3F1YXJlc1xyXG5cdFx0aWYgc3F1YXJlLmluc2lkZSBtb3VzZVgsbW91c2VZXHJcblx0XHRcdHNxdWFyZS5vbmNsaWNrKClcclxuXHRcdFx0eGRyYXcoKVxyXG5cdFx0XHRyZXR1cm4gZmFsc2VcclxuXHJcblx0ZmFsc2VcclxuXHJcbndpbmRvdy5tb3VzZVJlbGVhc2VkID0gPT5cclxuXHRyZWxlYXNlZCA9IHRydWVcclxuXHRmYWxzZSJdfQ==
//# sourceURL=c:\github\2023-019-ChessTree\coffee\sketch.coffee