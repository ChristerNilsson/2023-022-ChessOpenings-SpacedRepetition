// Generated by CoffeeScript 2.5.1
var SIZE, released;

import _ from 'https://cdn.skypack.dev/lodash';

import {
  ass,
  log,
  range
} from '../js/utils.js';

import {
  Board
} from '../js/board.js';

import {
  Button
} from '../js/button.js';

import {
  clickString,
  global,
  loadTree
} from '../js/globals.js';

import {
  SpacedRepetition
} from '../js/spaced_repetition.js';

SIZE = global.SIZE;

released = true; // prevention of touch bounce


// window.preload = =>
// 	global.database = loadJSON './data/database.json'
// 	global.tree = loadJSON './data/tree.json'
// 	console.log global.tree
// 	for letter in "rnbqkp"
// 		global.pics[letter] = loadImage './images/b' + letter + '.png'
// 	for letter in "RNBQKP"
// 		global.pics[letter] = loadImage './images/w' + letter.toLowerCase() + '.png'

// window.setup = =>
// 	createCanvas SIZE*10.3, SIZE*11
// 	textAlign CENTER,CENTER
// 	rectMode CENTER
// 	global.board = new Board()
// 	global.chess = new Chess()
// 	console.log global.tree
// 	loadTree 0
// 	xdraw()

// xdraw = =>
// 	background 'gray'
// 	textSize SIZE
// 	global.board.draw()
// 	for button in global.buttons
// 		button.draw()

// window.keyPressed = =>
// 	if key == 'ArrowLeft' then clickString 'left'
// 	if key == 'ArrowRight'  then clickString 'right'
// 	if key == 'ArrowUp'  then clickString 'up'
// 	if key == 'ArrowDown' then clickString 'down'
// 	if key == ' ' then clickString 'flip'
// 	if key == 'Home' then clickString 'first'
// 	xdraw()
// 	return false

// window.mousePressed = =>
// 	if not released then return
// 	released =false
// 	for button in global.buttons.concat global.board.buttons
// 		if button.inside mouseX,mouseY
// 			button.onclick()
// 			xdraw()
// 			return false

// 	for square in global.board.squares
// 		if square.inside mouseX,mouseY
// 			square.onclick()
// 			xdraw()
// 			return false

// 	false

// window.mouseReleased = =>
// 	released = true
// 	false

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBOztBQUFBLE9BQU8sQ0FBUCxNQUFBOztBQUNBLE9BQUE7RUFBUSxHQUFSO0VBQVksR0FBWjtFQUFnQixLQUFoQjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLEtBQVI7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUSxNQUFSO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVEsV0FBUjtFQUFvQixNQUFwQjtFQUEyQixRQUEzQjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLGdCQUFSO0NBQUEsTUFBQTs7QUFFQSxJQUFBLEdBQU8sTUFBTSxDQUFDOztBQUNkLFFBQUEsR0FBVyxLQVJYOztBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSAnaHR0cHM6Ly9jZG4uc2t5cGFjay5kZXYvbG9kYXNoJ1xyXG5pbXBvcnQge2Fzcyxsb2cscmFuZ2V9IGZyb20gJy4uL2pzL3V0aWxzLmpzJ1xyXG5pbXBvcnQge0JvYXJkfSBmcm9tICcuLi9qcy9ib2FyZC5qcydcclxuaW1wb3J0IHtCdXR0b259IGZyb20gJy4uL2pzL2J1dHRvbi5qcydcclxuaW1wb3J0IHtjbGlja1N0cmluZyxnbG9iYWwsbG9hZFRyZWV9IGZyb20gJy4uL2pzL2dsb2JhbHMuanMnXHJcbmltcG9ydCB7U3BhY2VkUmVwZXRpdGlvbn0gZnJvbSAnLi4vanMvc3BhY2VkX3JlcGV0aXRpb24uanMnXHJcblxyXG5TSVpFID0gZ2xvYmFsLlNJWkVcclxucmVsZWFzZWQgPSB0cnVlICMgcHJldmVudGlvbiBvZiB0b3VjaCBib3VuY2VcclxuXHJcbiMgd2luZG93LnByZWxvYWQgPSA9PlxyXG4jIFx0Z2xvYmFsLmRhdGFiYXNlID0gbG9hZEpTT04gJy4vZGF0YS9kYXRhYmFzZS5qc29uJ1xyXG4jIFx0Z2xvYmFsLnRyZWUgPSBsb2FkSlNPTiAnLi9kYXRhL3RyZWUuanNvbidcclxuIyBcdGNvbnNvbGUubG9nIGdsb2JhbC50cmVlXHJcbiMgXHRmb3IgbGV0dGVyIGluIFwicm5icWtwXCJcclxuIyBcdFx0Z2xvYmFsLnBpY3NbbGV0dGVyXSA9IGxvYWRJbWFnZSAnLi9pbWFnZXMvYicgKyBsZXR0ZXIgKyAnLnBuZydcclxuIyBcdGZvciBsZXR0ZXIgaW4gXCJSTkJRS1BcIlxyXG4jIFx0XHRnbG9iYWwucGljc1tsZXR0ZXJdID0gbG9hZEltYWdlICcuL2ltYWdlcy93JyArIGxldHRlci50b0xvd2VyQ2FzZSgpICsgJy5wbmcnXHJcblxyXG4jIHdpbmRvdy5zZXR1cCA9ID0+XHJcbiMgXHRjcmVhdGVDYW52YXMgU0laRSoxMC4zLCBTSVpFKjExXHJcbiMgXHR0ZXh0QWxpZ24gQ0VOVEVSLENFTlRFUlxyXG4jIFx0cmVjdE1vZGUgQ0VOVEVSXHJcbiMgXHRnbG9iYWwuYm9hcmQgPSBuZXcgQm9hcmQoKVxyXG4jIFx0Z2xvYmFsLmNoZXNzID0gbmV3IENoZXNzKClcclxuIyBcdGNvbnNvbGUubG9nIGdsb2JhbC50cmVlXHJcbiMgXHRsb2FkVHJlZSAwXHJcbiMgXHR4ZHJhdygpXHJcblxyXG4jIHhkcmF3ID0gPT5cclxuIyBcdGJhY2tncm91bmQgJ2dyYXknXHJcbiMgXHR0ZXh0U2l6ZSBTSVpFXHJcbiMgXHRnbG9iYWwuYm9hcmQuZHJhdygpXHJcbiMgXHRmb3IgYnV0dG9uIGluIGdsb2JhbC5idXR0b25zXHJcbiMgXHRcdGJ1dHRvbi5kcmF3KClcclxuXHJcbiMgd2luZG93LmtleVByZXNzZWQgPSA9PlxyXG4jIFx0aWYga2V5ID09ICdBcnJvd0xlZnQnIHRoZW4gY2xpY2tTdHJpbmcgJ2xlZnQnXHJcbiMgXHRpZiBrZXkgPT0gJ0Fycm93UmlnaHQnICB0aGVuIGNsaWNrU3RyaW5nICdyaWdodCdcclxuIyBcdGlmIGtleSA9PSAnQXJyb3dVcCcgIHRoZW4gY2xpY2tTdHJpbmcgJ3VwJ1xyXG4jIFx0aWYga2V5ID09ICdBcnJvd0Rvd24nIHRoZW4gY2xpY2tTdHJpbmcgJ2Rvd24nXHJcbiMgXHRpZiBrZXkgPT0gJyAnIHRoZW4gY2xpY2tTdHJpbmcgJ2ZsaXAnXHJcbiMgXHRpZiBrZXkgPT0gJ0hvbWUnIHRoZW4gY2xpY2tTdHJpbmcgJ2ZpcnN0J1xyXG4jIFx0eGRyYXcoKVxyXG4jIFx0cmV0dXJuIGZhbHNlXHJcblxyXG4jIHdpbmRvdy5tb3VzZVByZXNzZWQgPSA9PlxyXG4jIFx0aWYgbm90IHJlbGVhc2VkIHRoZW4gcmV0dXJuXHJcbiMgXHRyZWxlYXNlZCA9ZmFsc2VcclxuIyBcdGZvciBidXR0b24gaW4gZ2xvYmFsLmJ1dHRvbnMuY29uY2F0IGdsb2JhbC5ib2FyZC5idXR0b25zXHJcbiMgXHRcdGlmIGJ1dHRvbi5pbnNpZGUgbW91c2VYLG1vdXNlWVxyXG4jIFx0XHRcdGJ1dHRvbi5vbmNsaWNrKClcclxuIyBcdFx0XHR4ZHJhdygpXHJcbiMgXHRcdFx0cmV0dXJuIGZhbHNlXHJcblxyXG4jIFx0Zm9yIHNxdWFyZSBpbiBnbG9iYWwuYm9hcmQuc3F1YXJlc1xyXG4jIFx0XHRpZiBzcXVhcmUuaW5zaWRlIG1vdXNlWCxtb3VzZVlcclxuIyBcdFx0XHRzcXVhcmUub25jbGljaygpXHJcbiMgXHRcdFx0eGRyYXcoKVxyXG4jIFx0XHRcdHJldHVybiBmYWxzZVxyXG5cclxuIyBcdGZhbHNlXHJcblxyXG4jIHdpbmRvdy5tb3VzZVJlbGVhc2VkID0gPT5cclxuIyBcdHJlbGVhc2VkID0gdHJ1ZVxyXG4jIFx0ZmFsc2UiXX0=
//# sourceURL=c:\github\2023-022-ChessOpenings-SpacedRepetition\coffee\sketch.coffee