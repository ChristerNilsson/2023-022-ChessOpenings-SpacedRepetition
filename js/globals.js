// Generated by CoffeeScript 2.5.1
var link, undo,
  modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

import {
  ass,
  log,
  range,
  split,
  param,
  hexToBase64,
  spaceShip
} from '../js/utils.js';

import {
  Button
} from '../js/button.js';

import _ from 'https://cdn.skypack.dev/lodash';

export var global = {
  //name : 'bishop',
  name: 'tree',
  arr: [],
  version: 'ver: B',
  board: null,
  child: 0, // move under consideration
  children: [], // sorted list of [value,san,uci]
  SIZE: 50, // of square
  pics: {}, // 12 pjäser
  // data:null,
  buttons: [],
  database: {}, // fen => value
  //currNode:null, # pekar in i ett träd
  //count: 0, # räknar antal nya drag i trädet
  stack: [] // innehåller aktuell gren
};

export var coords = (uci) => {
  var c0, c1, r0, r1;
  param.String(uci);
  c0 = "abcdefgh".indexOf(uci[0]);
  r0 = "12345678".indexOf(uci[1]);
  c1 = "abcdefgh".indexOf(uci[2]);
  r1 = "12345678".indexOf(uci[3]);
  return param.Array([c0 + 8 * r0, c1 + 8 * r1]);
};

ass([8, 24], coords("a2a4"));

export var toUCI = ([from, to]) => {
  var c0, c1, r0, r1;
  param.Integer(from);
  param.Integer(to);
  c0 = "abcdefgh"[from % 8];
  r0 = "12345678"[Math.floor(from / 8)];
  c1 = "abcdefgh"[to % 8];
  r1 = "12345678"[Math.floor(to / 8)];
  return param.String(c0 + r0 + c1 + r1);
};

ass("e2e4", toUCI([12, 28]));

export var toObjectNotation = ([from, to]) => {
  var uci;
  param.Integer(from);
  param.Integer(to);
  uci = toUCI([from, to]);
  from = uci.slice(0, 2);
  to = uci.slice(2, 4);
  return param.Object({from, to});
};

ass({
  from: 'e2',
  to: 'e4'
}, toObjectNotation([12, 28]));

export var empty = (n) => {
  param.Integer(n);
  return param.String((1 + Math.floor(n / 8)).toString());
};

undo = () => {
  if (global.stack.length === 0) {
    return;
  }
  global.chess.undo();
  return global.currNode = global.stack.pop();
};

// makeChildren()
export var dumpState = () => {
  console.log('STATE ########');
  console.log('  stack', global.stack);
  console.log('  currNode', global.currNode);
  return console.log('  history', global.chess.history());
};

link = () => {
  return 'https://lichess.org/analysis/' + global.chess.fen();
};

export var clickString = (key) => {
  var g, san, uci, value;
  param.String(key);
  g = global;
  if (key === 'flip') {
    return g.board.flip();
  } else if (key === 'link') {
    return window.open(link(), '_blank');
  } else if (key === 'up') {
    return g.child = modulo(g.child - 1, g.children.length);
  } else if (key === 'down') {
    return g.child = modulo(g.child + 1, g.children.length);
  } else if (key === 'undo') {
    return undo();
  } else if (key === 'left') {
    return undo();
  } else if (key === 'right') {
    console.log(g.children, g.child);
    [value, san, uci] = g.children[g.child];
    console.log('move', [value, san, uci]);
    g.chess.move(san);
    g.stack.push(g.currNode);
    g.currNode = g.currNode[uci];
    return makeChildren();
  } else if (key === 'save') {
    return download(g.tree, g.name + '.json');
  } else {
    // else if key == 'correct' then correctAnswer()
    // else if key == 'wrong' then wrongAnswer()
    return console.log('unknown key in clickString', key);
  }
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2023-022-ChessOpenings-SpacedRepetition\coffee\globals.coffee